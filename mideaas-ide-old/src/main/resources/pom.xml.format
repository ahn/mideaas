<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>%s</groupId>
    <artifactId>%s</artifactId>
    <version>%s</version>
    <packaging>%s</packaging>

    <name>MIDEaaS Application</name>
    
    <prerequisites>
        <maven>2.2.1</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vaadin.version>7.1.10</vaadin.version>
        <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
        <gwt.persistentunitcachedir>${project.basedir}/gwtcache</gwt.persistentunitcachedir>
    </properties>
    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
           <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
<!--         <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
			<groupId>com.vaadin.external.slf4j</groupId>
			<artifactId>vaadin-slf4j-jdk14</artifactId>
			<version>1.6.1</version>
        </dependency>
        <dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
            <!--google appengine does not support servler 3.0-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>clara</artifactId>
            <version>1.0.0</version>
        </dependency>
        
        <!-- ... -->
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>ratingstars</artifactId>
            <version>2.1</version>
        </dependency>
    </dependencies>

    <build>
    	<finalName>%s</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                	<!--google appengine does not support 1.7--> 
                    <source>1.6</source>
                    <target>1.6</target>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>
            <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
            <!-- directory is cleaned properly -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
                        way compatible with Vaadin eclipse plugin. -->
                    <!-- <webappDirectory>${basedir}/${artifactId}/src/main/webapp/VAADIN/widgetsets -->
                    <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
                    </webappDirectory>
                    <!-- <hostedWebapp>${basedir}/${artifactId}/src/main/webapp/VAADIN/widgetsets -->
                    <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
                    </hostedWebapp>
                    <noServer>true</noServer>
                    <!-- Remove draftCompile when project is ready -->
                    <draftCompile>true</draftCompile>
                    <compileReport>false</compileReport>
                    <style>OBF</style>
                    <strict>true</strict>
                </configuration>
                <!--
                <executions>
                    <execution>
                        <goals>
                            <goal>resources</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                -->
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.11.v20130520</version>
                <configuration>
                    <webApp>
                        <contextPath>${mideaas.jetty.contextPath}</contextPath>
                    </webApp>
                    <stopPort>${mideaas.jetty.stopPort}</stopPort>
                    <stopKey>${mideaas.jetty.stopKey}</stopKey>
                    <scanIntervalSeconds>2</scanIntervalSeconds>
                </configuration>
            </plugin>
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>${warOutputName}</warName>
                    <outputDirectory>${warOutputDirectory}</outputDirectory>
                </configuration>
            </plugin>-->
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
    <!-- if alt.build.dir set, using it as the build dir, otherwise default (=target). -->
    <profiles>
        <profile>
            <id>alternateBuildDir</id>
            <activation>
                <property>
                    <name>alt.build.dir</name>
                </property>
            </activation>
            <build>
                <directory>${project.basedir}/${alt.build.dir}</directory>
            </build>
        </profile>
        <profile>
            <id>compileOne</id>
            <activation>
                <property>
                    <name>mideaas.compile.file</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <!--<failOnError>false</failOnError>-->
                            <includes>
                                <include>${mideaas.compile.file}</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>GAECompile</id>
            <activation>
                <property>
                    <name>GAECompile</name>
                </property>
            </activation>
    		<dependencies>        
				<dependency>
		    		<groupId>com.google.appengine</groupId>
		    		<artifactId>appengine-api-1.0-sdk</artifactId>
		    		<version>1.8.5</version>
				</dependency>
			</dependencies>
            <build>
                <directory>${project.basedir}/war/WEB-INF/</directory>
          	    <plugins>
			      <plugin>
			        <artifactId>maven-resources-plugin</artifactId>
			        <version>2.6</version>
			        <executions>
			          <execution>
			            <id>copy-resources</id>
			            <!-- here the phase you need -->
			            <phase>validate</phase>
			            <goals>
			              <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			              <outputDirectory>${project.basedir}/war</outputDirectory>
			              <resources>          
			                <resource>
			                  <directory>/src/main/webapp</directory>
			                  <filtering>true</filtering>
			                </resource>
			              </resources>              
			            </configuration>            
			          </execution>
			        </executions>
			      </plugin>
		        <plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-dependency-plugin</artifactId>
				    <executions>
				      <execution>
				        <id>copy-dependencies</id>
				        <phase>package</phase>
				        <goals>
				          <goal>copy-dependencies</goal>
				        </goals>
				        <configuration>
				          <outputDirectory>${basedir}/war/WEB-INF/lib/</outputDirectory>
				          <overWriteReleases>false</overWriteReleases>
				          <overWriteSnapshots>false</overWriteSnapshots>
				          <overWriteIfNewer>true</overWriteIfNewer>
				        </configuration>
				      </execution>
				    </executions>
				  </plugin>
			    </plugins>
            </build>
        </profile>
    </profiles>
</project>